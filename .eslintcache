[{"/home/djacales/Documents/MerakiDashboard/src/index.js":"1","/home/djacales/Documents/MerakiDashboard/src/components/App.js":"2","/home/djacales/Documents/MerakiDashboard/src/components/Layout.js":"3","/home/djacales/Documents/MerakiDashboard/src/pages/Home.js":"4","/home/djacales/Documents/MerakiDashboard/src/pages/About.js":"5","/home/djacales/Documents/MerakiDashboard/src/components/Footer.js":"6","/home/djacales/Documents/MerakiDashboard/src/components/Navbar.js":"7","/home/djacales/Documents/MerakiDashboard/src/components/Card.js":"8","/home/djacales/Documents/MerakiDashboard/src/pages/Dashboard.js":"9","/home/djacales/Documents/MerakiDashboard/src/api.js":"10","/home/djacales/Documents/MerakiDashboard/src/components/Organization.js":"11","/home/djacales/Documents/MerakiDashboard/src/pages/Network.js":"12","/home/djacales/Documents/MerakiDashboard/src/components/NetworkCard.js":"13"},{"size":465,"mtime":1613249734540,"results":"14","hashOfConfig":"15"},{"size":775,"mtime":1613260160270,"results":"16","hashOfConfig":"15"},{"size":387,"mtime":1613262490048,"results":"17","hashOfConfig":"15"},{"size":718,"mtime":1613250471794,"results":"18","hashOfConfig":"15"},{"size":171,"mtime":1613249734540,"results":"19","hashOfConfig":"15"},{"size":228,"mtime":1613249734532,"results":"20","hashOfConfig":"15"},{"size":897,"mtime":1613250039210,"results":"21","hashOfConfig":"15"},{"size":1719,"mtime":1613334808220,"results":"22","hashOfConfig":"15"},{"size":1129,"mtime":1613333715786,"results":"23","hashOfConfig":"15"},{"size":613,"mtime":1613258323675,"results":"24","hashOfConfig":"15"},{"size":676,"mtime":1613260145506,"results":"25","hashOfConfig":"15"},{"size":1276,"mtime":1613334287953,"results":"26","hashOfConfig":"15"},{"size":249,"mtime":1613261399482,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"s1q6tb",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/djacales/Documents/MerakiDashboard/src/index.js",[],["60","61"],"/home/djacales/Documents/MerakiDashboard/src/components/App.js",[],"/home/djacales/Documents/MerakiDashboard/src/components/Layout.js",[],"/home/djacales/Documents/MerakiDashboard/src/pages/Home.js",["62","63"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Card from '../components/Card';\r\nimport './styles/Home.css';\r\nimport logo from '../images/hippo.png';\r\n\r\nexport default class Homme extends Component {\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n            <h1 className=\"center white\">Welcome To Hippo Meraki </h1>\r\n            <h2 className=\"center white\"> The FrontEnd Page for your CISCO Meraki APIS Products</h2>\r\n            <div className=\"center white\">\r\n            <Link to=\"/dashboard\">\r\n                <span className=\"btn btn-primary\">show</span>\r\n            </Link>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}","/home/djacales/Documents/MerakiDashboard/src/pages/About.js",[],"/home/djacales/Documents/MerakiDashboard/src/components/Footer.js",[],"/home/djacales/Documents/MerakiDashboard/src/components/Navbar.js",["64"],"import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './styles/Navbar.css';\r\nimport hippo from '../images/hippo.png';\r\n\r\nclass Navbar extends React.Component {\r\n    render(){\r\n       return(\r\n        <div className=\"Navbar\">\r\n        <div className=\"container-fluid\">\r\n            <Link to=\"/\">\r\n                 <img className=\"logo\" src={hippo}/>\r\n                 <span className=\"font-weight-light\">Hippo</span><span className=\"font-weight-bold\">Meraki</span>\r\n            </Link>\r\n            <div className=\"links\">\r\n                <Link to=\"/login\">\r\n                <span className=\"font-weight-light\">Login</span>\r\n                </Link>\r\n                <Link to=\"/about\">\r\n                <span className=\"font-weight-light\">About</span>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n        </div>\r\n       )\r\n    }\r\n}\r\n\r\nexport default Navbar;",["65","66"],"/home/djacales/Documents/MerakiDashboard/src/components/Card.js",[],"/home/djacales/Documents/MerakiDashboard/src/pages/Dashboard.js",["67"],"import React from 'react';\n\nimport api from '../api';\nimport Organization from '../components/Organization';\n\n\nexport default class Dashboard extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            loading: true,\n            error:null,\n            data : [],\n        }\n\n    }\n    componentDidMount() {\n        this.fetchData()\n    }\n\n    fetchData = async () => {\n        this.setState({loading:true,error:null, data:null})\n        try {\n            const data = await api.organizations.list();\n            this.setState({loading:false,data:data,error:null});\n        }catch(error){\n            this.setState({loading:false,error:error});\n\n        }\n    }\n    render(){\n\n        if( this.state.loading == true){\n            return 'Loading...';\n        }\n        if (this.state.error != null){\n            return 'Error Something Bad Happened'\n        }\n        return <div className=\"container\">\n            <h1 className=\"center white\">  Your Network </h1>\n            <Organization name={this.state.data.name} url={this.state.data.url} ></Organization>\n        </div>\n    }\n}","/home/djacales/Documents/MerakiDashboard/src/api.js",[],"/home/djacales/Documents/MerakiDashboard/src/components/Organization.js",[],"/home/djacales/Documents/MerakiDashboard/src/pages/Network.js",["68","69","70"],"import React from 'react'\nimport Organization from './styles/Network.css';\nimport api from '../api';\nimport NetworkCard from '../components/Card';\nimport Card from '../components/Card';\n\nexport default class Network extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            data:[],\n            loading:true,\n            error:null,\n        }\n    }\n\n    componentDidMount(){\n        this.fetchData()\n    }\n\n    fetchData = async () => {\n        this.setState({loading:true,error:null, data:null})\n        try {\n            const data = await api.networks.list();\n            console.log(data);\n            this.setState({loading:false,data:data});\n        }catch(error){\n            this.setState({loading:false,error:error});\n\n        }\n    }\n    render(){\n        if(this.state.loading == true){\n            return 'Loading...';\n        }\n        return <div className=\"row\">\n                <h1 className=\"col-12 center white\">  Your Network </h1>\n                {this.state.data.map( item => <Card name={item.name} id={item.id}\n                 enabledMeraki={item.disableMyMerakiCom} timeZone={item.timeZone}\n                 productTypes={item.productTypes}\n                 ></Card>)}\n        </div>\n            \n    }\n}","/home/djacales/Documents/MerakiDashboard/src/components/NetworkCard.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":4,"column":8,"nodeType":"77","messageId":"78","endLine":4,"endColumn":12},{"ruleId":"75","severity":1,"message":"79","line":6,"column":8,"nodeType":"77","messageId":"78","endLine":6,"endColumn":12},{"ruleId":"80","severity":1,"message":"81","line":13,"column":18,"nodeType":"82","endLine":13,"endColumn":53},{"ruleId":"71","replacedBy":"83"},{"ruleId":"73","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":33,"column":32,"nodeType":"87","messageId":"88","endLine":33,"endColumn":34},{"ruleId":"75","severity":1,"message":"89","line":2,"column":8,"nodeType":"77","messageId":"78","endLine":2,"endColumn":20},{"ruleId":"75","severity":1,"message":"90","line":4,"column":8,"nodeType":"77","messageId":"78","endLine":4,"endColumn":19},{"ruleId":"85","severity":1,"message":"86","line":33,"column":31,"nodeType":"87","messageId":"88","endLine":33,"endColumn":33},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["91"],["92"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Organization' is defined but never used.","'NetworkCard' is defined but never used.","no-global-assign","no-unsafe-negation"]